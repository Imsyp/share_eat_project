<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>채팅하기</title>
    <link href="/css/style.css" rel="stylesheet">
    <link rel="icon" href="/images/favicon.ico" type="image/x-icon">
    <!-- google font link-->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Hi+Melody&display=swap" rel="stylesheet">
    <style>
        .font {
            font-family: "Hi Melody", sans-serif;
        }

        body {
            margin: 0;
            font-family: Arial, sans-serif;
            background-color: #fff8e6;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        #content {
            display: flex;
            flex-direction: column;
            width: 90%;
            max-width: 600px;
            height: 80vh;
            background: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            overflow: hidden;
        }

        .detail-bg {
            display: flex;
            flex-direction: column;
            flex: 1;
            width: 100%;
            overflow-y: auto; /* 메시지 영역 스크롤 가능 */
        }

        .header {
            display: flex; /* 요소들을 가로로 배열 */
            justify-content: center; /* 요소들을 가로 중앙 정렬 */
            align-items: center; /* 요소들을 세로 중앙 정렬 */
            width: 100%;
            padding: 20px;
            box-sizing: border-box;
            background: #fff;
            border-bottom: 1px solid #ddd;
        }

        .profile {
            display: flex; /* 프로필 이미지와 텍스트를 column으로 배열 */
            flex-direction: column; /* 요소들을 세로로 배열 */
            align-items: center; /* 요소들을 가로 중앙 정렬 */
            border-radius: 10px;
        }

        .profile img {
            width: 70px;
            height: 70px;
            border-radius: 50%;
            margin-bottom: 10px; /* 이미지와 텍스트 사이의 간격 */
        }
        .profile button{
            text-align: right;
            margin-left: 450px;
        }

        .username {
            font-size: 20px; /* 텍스트 크기 조정 */
            font-weight: bold; /* 텍스트 굵기 조정 */
        }

        .chat-screen {
            display: flex;
             flex-direction: column;
            flex: 1;
            padding: 20px;
            overflow-y: auto; /* 메시지 영역 스크롤 가능 */
            background: #fffbf4;
            width: 100%;
            box-sizing: border-box;
        }

        .chat-box {
            display: inline-block;
            max-width: 70%;
            margin:10px 0;
            padding: 10px 15px;
            border-radius: 10px;
            position: relative;
            word-wrap: break-word; /* 메시지가 길 경우 줄바꿈 */
        }

        .chat-box.mine {
            margin-left: auto;
            justify-content: flex-end;
            background: #ffbd16;
            color: #fff;
        }

        .chat-box.opponent{
            margin-right: auto;
            justify-content: flex-end;
            background: #ffedc0;
            color:#000
        }

        .chat-box span {
            display:block;
        }

        .chat-form {
            display: flex;
            padding: 10px;
            background: #fff;
            border-top: 1px solid #ddd;
            width: 100%;
            box-sizing: border-box;
            position: sticky; /* 고정 */
            bottom: 0; /* 하단에 고정 */
        }

        .chat-input {
            flex: 1;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-right: 10px;
            font-size: 16px;
        }

        .chat-button {
            padding: none;
            border: none;
            background:none;
            cursor: pointer;
            margin-left: 5px;
            }
        .profile:hover{
            background-color:#ddd;
            transition: 1s;
        }
        .tooltip {
            display: none; 
            position: absolute;
            top: 80px; 
            background-color: rgba(0, 0, 0, 0.75);
            color: #fff;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 12px;
            white-space: nowrap;
            z-index: 10;
        }

        .profile:hover .tooltip {
            display: block; 
        }
    </style>
</head>
<body class="grey-bg">
    <%- include('sidebar') %>

    <div id="content">
        <div class="header">
            <div class="profile" >
                <img src="<%=opponent.profile%>" alt="Profile Picture" class="reserve-button">
                <div class="username"><%= opponent.username %>님</div>
                <div class="tooltip">프로필 확인하기</div>
            </div>
        </div>

        <div class="detail-bg">
            <div class="chat-screen">
                <% for (var i = 0; i < messages.length; i++) { %>
                    <% if (messages[i].who.toString() === userid._id.toString()) { %>
                        <div class="chat-box mine"><span><%= messages[i].content %></span></div>
                    <% } else { %>
                        <div class="chat-box opponent"><span><%= messages[i].content %></span></div>
                    <% } %>
                <% } %>
            </div>
        </div>
        <div class="chat-form">
            <input class="chat-input" placeholder="메시지를 입력하세요...">
            <button class="chat-button" onclick="alert"><img src="/images/send_icon.png" width="20px"></button>
        </div>
        
    </div>
    
</body>
<script src="https://cdn.jsdelivr.net/npm/socket.io@4.7.2/client-dist/socket.io.min.js"></script>
<script>
    const socket = io();
    socket.emit('ask-join', '<%= result._id %>');
  
    function sendMessage() {
        let 작성한거 = document.querySelector('.chat-input').value;
        if (작성한거.trim() === '') return;
        const messageData = {
            room: '<%= result._id %>',
            message: 작성한거,
            senderId: '<%= myname%>' // 사용자의 ID를 메시지 객체에 포함
        };
        socket.emit('message-send', messageData);
        document.querySelector('.chat-input').value = '';
    }

    document.querySelector('.chat-button').addEventListener('click', sendMessage);

    document.querySelector('.chat-input').addEventListener('keypress', function(event) {
        if (event.key === 'Enter') {
            event.preventDefault(); // 엔터 키의 기본 동작 방지 (폼 제출 방지)
            sendMessage();
        }
    });
  
    socket.on('message-broadcast', (data) => {
        if (data.senderId == '<%=myname%>'){
            document.querySelector('.chat-screen').insertAdjacentHTML('beforeend', `<div class="chat-box mine"><span>${data.message}</span></div>`);
        } else {
            document.querySelector('.chat-screen').insertAdjacentHTML('beforeend', `<div class="chat-box"><span>${data.message}</span></div>`);
        }
        scrollToBottom();
        console.log(data.message);
    });

    document.querySelector('.reserve-button').addEventListener('click', function() {
        let opponentId;
        const members = JSON.parse('<%- members %>'); // 클라이언트 측에서 JSON 문자열을 파싱하여 배열 생성
        const userid = JSON.parse('<%- useridj %>');
        for (var i = 0; i < members.length; i++) {
            if (userid.username !== members[i]) {
                opponentId = members[i];
                break; // 상대방을 찾았으므로 반복문 중단
            }
        }
        location.href = '/user/opponent?opponentId=' + opponentId;
    });
    function scrollToBottom() {
        const chatScreen = document.querySelector('.chat-screen');
        chatScreen.scrollTop = chatScreen.scrollHeight;
    }
    document.addEventListener('DOMContentLoaded', function() {
        scrollToBottom();
    });
</script>
</html>
